package main

import "fmt"


func SetBit(numb int64, i int64, bit bool) int64{
	if bit { //если bit == true, то ставим 1
		return numb | (1 << i) // Устанавливаем бит на нужную позицию с логическим или (OR) выставляем 1 где нам нужно 
	} else { //если bit ==false, то ставим 0
		return numb &^ (1 << i) // Сбрасываем бит на нужной позиции с логическим AND NOT, то есть выставляем 1 где нам нужно, реверсив число и получаем маску типа 1110 
	}
}

func main(){
	var numb int64 = 5
	newnumb := SetBit(numb, 0, false) //Исчисление битов идет с 0. То есть младший бит в 0 позиции
	fmt.Println(newnumb)
}

/*
Как работает 1 << i в случае битовых операций с int64 берется число 000..0001 и сдвигается влево на i позиций, заполняя справа нулями.
*/